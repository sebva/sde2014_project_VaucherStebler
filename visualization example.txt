dict := CallGraph new generate: 10.
methods := dict keys.
classes := Set new.
dict values do: [ :each | classes addAll: each. ].

view := RTView new.
shapeMethods := RTEllipse new size: [:e | 0.02 * e numberOfLinesOfCode * e incomingInvocations size]; color: Color red.
shapeClasses := RTEllipse new size: [:e | 0.1 * e numberOfLinesOfCode]; color: Color green.

methods := shapeMethods elementsOn: methods.
classes := shapeClasses elementsOn: classes.

view addAll: methods.
view addAll: classes.
RTEdge buildEdgesFromObjects: (dict keys) from: #yourself toAll: [ :e | dict at: e ] using: (RTLine new color: (Color blue alpha: 0.2)) inView: view.
RTCenteredCircleLayout new initialRadius:200; on: methods.
view @ RTDraggableView.
methods @ RTDraggable.
methods @ RTHighlightable.
methods @ RTPopup.
methods @ (RTMenuActivable new action: #inspect).

RTCenteredCircleLayout new initialRadius:400; on: classes.
classes @ RTDraggable.
classes @ RTHighlightable.
classes @ RTPopup.
classes @ (RTMenuActivable new action: #inspect).
view